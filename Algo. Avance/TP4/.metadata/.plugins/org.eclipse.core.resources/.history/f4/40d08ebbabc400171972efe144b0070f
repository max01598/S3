package hash;

import java.util.ArrayList;
import java.util.List;



public class MDHashTable<K, V> extends  AbstractHashTable<K,V>{
	
	
	/**
	 * Constructs an empty hashtable with an initial capacity of 4.
	 *
	*/
	public MDHashTable() {
		// TODO Auto-generated constructor stub
		this.size=0;
		this.table=new List[4];
		for(int i=0;i<4;i++)
		{
			this.table[i]= new ArrayList<Mapping<K,V>>();
		}
	}

	@Override
	public V put(K key, V value) {
		int hashKey = key.hashCode();
		int indexe = hashKey%table.length;
		V valeurretour=null;
		
		for(int i=0;i<this.table[indexe].size();i++)
		{
			if(table[indexe].get(i).getKey()==key)
			{
				valeurretour=table[indexe].get(i).getValue();
				table[indexe].remove(i);
				table[indexe].add(new Mapping(key, value));
				return valeurretour;
			}
		}
		
		table[indexe].add(new Mapping(key, value));
		return valeurretour;
	}

	@Override
	public V get(Object key) {
		// TODO Auto-generated method stub
		return null;
	}
	
	

}
